plugins {
    id 'java'
    id 'groovy'
    id 'groovy-gradle-plugin'
    id 'java-gradle-plugin'
    id 'maven-publish'
}

group = 'com.igse.igseserv'
version = '1.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
    /*   gradlePluginPortal()
       mavenLocal()*/
}

dependencies {
    implementation 'io.spring.gradle:dependency-management-plugin:1.1.6'
    implementation gradleApi()
    implementation localGroovy()
    implementation 'org.apache.groovy:groovy:4.0.14'
}

def suffix() {
    def environment = 'feature'
    def rcBranch = /^origin\/rc\/[1-9]{1}\.[0-9]{1,3}\.[0-9]{1,3}/
    def releaseBranch =/^origin\/release\/[1-9]{1}\.[0-9]{1,3}\.x/

    if (rootProject.hasProperty('branch')){
        if (['origin/develop'].contains(rootProject.hasProperty('branch')) || rootProject.hasProperty('branch') =~ rcBranch){
            environment = 'develop'
        }else if (['origin/develop'].contains(rootProject.hasProperty('branch')) || rootProject.hasProperty('branch') =~ releaseBranch){
            environment= 'release'
        }
    }

    switch (environment){
        case 'release':
            ""
            break;
        case 'develop':
            "-SNAPSHOT"
            break
        default :
            if (!rootProject.hasProperty('shortSha')){
                "-LOCAL"
            }else {
                "-${rootProject.getProperty('shortSha')}"
            }
    }
}

gradlePlugin {
    plugins {
        igse {
            id = 'igse'
            implementationClass = 'com.igse.IgsePlugin'
        }
    }
}



